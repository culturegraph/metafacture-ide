h1. Overview

The Metafacture IDE provides Eclipse integration for the Culturegraph Metafacture tools.

It currently consists of an Xtext-based editor and a launcher for the Metafacture Flux language. Flux is a domain-specific language (DSL) used to drive metadata transformation workflows based on Metafacture, a stream based data processing framework with an XML-based metadata transformation language.

"!https://travis-ci.org/culturegraph/metafacture-ide.png!":https://travis-ci.org/culturegraph/metafacture-ide

h1. License

Eclipse Public License: "http://www.eclipse.org/legal/epl-v10.html":http://www.eclipse.org/legal/epl-v10.html

h1. Usage

To install the Metafacture IDE in Eclipse, add the @http://lobid.org/download/tools/p2@ site under _Help_ -> _Install New Software_ ->  _Add..._ and install the 'Metafacture IDE' feature. Alternatively you can download an Eclipse workbench with the Metafacture IDE installed (for Windows, Linux, and Mac) from "http://lobid.org/download/tools":http://lobid.org/download/tools. After a restart, *.flux files will open with the Flux editor. To execute a *.flux file, choose _Run_ -> _Run As_ -> _Flux Workflow_.

h1. Sample

To illustrate the usage of the Metafacture IDE, we provide a small sample transformation of MARC-XML input data to both RDF in N-Triple serialization and to Graphviz DOT.

As the first step, create a project in Eclipse: _File_ -> _New_ -> _Project..._ -> _General_ -> _Project_

h2. Input

Copy the sample input file at "https://github.com/culturegraph/metafacture-ide/raw/master/samples/input.xml":https://github.com/culturegraph/metafacture-ide/raw/master/samples/input.xml into your project. This file contains two records in the MARC-XML format.

h2. Morph

Create a file (_File_ -> _New_) called @morph.xml@ with the following content (this describes the actual transformation):

bc. 
<?xml version="1.0" encoding="UTF-8"?>
<metamorph xmlns="http://www.culturegraph.org/metamorph"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1">
	<rules>
		<!-- General attributes for each record: -->
		<data source="001" name="subject">
			<regexp match="(.*)" format="http://lobid.org/zvdd/hbz/${1}" />
		</data>
		<data source="001" name="http://www.w3.org/1999/02/22-rdf-syntax-ns#type">
			<regexp match=".*" format="http://purl.org/dc/terms/BibliographicResource" />
		</data>
		<data source="001" name="http://www.w3.org/1999/02/22-rdf-syntax-ns#type">
			<regexp match=".*" format="http://purl.org/vocab/frbr/core#Manifestation" />
		</data>
		<data source="001" name="http://www.w3.org/2004/02/skos/core#Concept">
			<regexp match=".*"
				format="http://iflastandards.info/ns/isbd/terms/mediatype/T1010" />
		</data>
		<!-- Map specific fields: -->
		<data source="8564 .u" name="http://lobid.org/vocab/lobid#fulltextOnline" />
		<data source="24500.a" name="http://iflastandards.info/ns/isbd/elements/P1004">
			<!-- Strip newlines with surrounding space: -->
			<replace pattern="\s*\n+\s*" with=" " />
		</data>
		<data source="533  .c" name="http://iflastandards.info/ns/isbd/elements/P1017" />
		<data source="1001 .a" name="http://purl.org/dc/elements/1.1/creator" />
		<data source="260  .c" name="http://purl.org/dc/terms/medium/issued">
			<!-- One processing example: pick out first valid year: -->
			<regexp match="(1\d{3}|200\d)" format="${1}" />
		</data>
		<data source="041  .a" name="http://purl.org/dc/terms/language" />
		<!-- Leave all other fields untransformed: <data source="_else"/> -->
	</rules>
</metamorph>

You can also download this file from "https://github.com/culturegraph/metafacture-ide/raw/master/samples/morph.xml":https://github.com/culturegraph/metafacture-ide/raw/master/samples/morph.xml.

For details on the Metamorph syntax and functionality have a look at the "Metafacture wiki":https://github.com/culturegraph/metafacture-core/wiki and "samples":https://github.com/culturegraph/metafacture-core/tree/master/examples.

h2. Flux

Finally, we create the Flux file: create a file (_File_ -> _New_) called @sample.flux@ with the following content:

bc. 
default files = FLUX_DIR;
files + "input.xml" |
open-file |
decode-xml |
handle-marcxml |
morph(files + "morph.xml") |
stream-tee | {
	encode-ntriples |
	write(files + "output.nt")
}{
	encode-dot |
	write(files + "output.dot")
};

You can also download this file from "https://github.com/culturegraph/metafacture-ide/raw/master/samples/sample.flux":https://github.com/culturegraph/metafacture-ide/raw/master/samples/sample.flux. For advanced workflow definitions have a look at the "Metafacture wiki":https://github.com/culturegraph/metafacture-core/wiki and "samples":https://github.com/culturegraph/metafacture-core/tree/master/examples.

This file defines the workflow: open the input file, read it as MARC-XML, transform it using the morph definition from above, encode the result once as N-Triples and once as Graphviz DOT, and finally write both results to files. To execute the workflow, choose the file and select _Run_ -> _Run As_ -> _Flux Workflow_.  If you open the *.nt output file, you should see the following content:

bc. 
<http://lobid.org/zvdd/hbz/184000> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://purl.org/dc/terms/BibliographicResource> .
<http://lobid.org/zvdd/hbz/184000> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://purl.org/vocab/frbr/core#Manifestation> .
<http://lobid.org/zvdd/hbz/184000> <http://www.w3.org/2004/02/skos/core#Concept> <http://iflastandards.info/ns/isbd/terms/mediatype/T1010> .
<http://lobid.org/zvdd/hbz/184000> <http://purl.org/dc/terms/medium/issued> "1848" .
<http://lobid.org/zvdd/hbz/184000> <http://iflastandards.info/ns/isbd/elements/P1017> "Univ.-Bibl." .
<http://lobid.org/zvdd/hbz/184000> <http://purl.org/dc/terms/language> "ger" .
<http://lobid.org/zvdd/hbz/184000> <http://purl.org/dc/elements/1.1/creator> "Falke, Jakob" .
<http://lobid.org/zvdd/hbz/184000> <http://lobid.org/vocab/lobid#fulltextOnline> <http://digi.ub.uni-heidelberg.de/diglit/falke1873> .
<http://lobid.org/zvdd/hbz/183999> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://purl.org/dc/terms/BibliographicResource> .
<http://lobid.org/zvdd/hbz/183999> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://purl.org/vocab/frbr/core#Manifestation> .
<http://lobid.org/zvdd/hbz/183999> <http://www.w3.org/2004/02/skos/core#Concept> <http://iflastandards.info/ns/isbd/terms/mediatype/T1010> .
<http://lobid.org/zvdd/hbz/183999> <http://iflastandards.info/ns/isbd/elements/P1017> "Univ.-Bibl." .
<http://lobid.org/zvdd/hbz/183999> <http://purl.org/dc/terms/language> "ger" .
<http://lobid.org/zvdd/hbz/183999> <http://iflastandards.info/ns/isbd/elements/P1004> "Kunst und Kunstgewerbe auf der Wiener Weltausstellung 1873" .
<http://lobid.org/zvdd/hbz/183999> <http://lobid.org/vocab/lobid#fulltextOnline> <http://digi.ub.uni-heidelberg.de/diglit/luetzow1875> .

The *.dot file should contain the following content:

bc. 
digraph g {
	graph[layout=fdp]
	"<http://lobid.org/zvdd/hbz/184000>" -> "<http://purl.org/dc/terms/BibliographicResource>" [label="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"]
	"<http://lobid.org/zvdd/hbz/184000>" -> "<http://purl.org/vocab/frbr/core#Manifestation>" [label="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"]
	"<http://lobid.org/zvdd/hbz/184000>" -> "<http://iflastandards.info/ns/isbd/terms/mediatype/T1010>" [label="http://www.w3.org/2004/02/skos/core#Concept"]
	"<http://lobid.org/zvdd/hbz/184000>" -> "1848" [label="http://purl.org/dc/terms/medium/issued"]
	"<http://lobid.org/zvdd/hbz/184000>" -> "Univ.-Bibl." [label="http://iflastandards.info/ns/isbd/elements/P1017"]
	"<http://lobid.org/zvdd/hbz/184000>" -> "ger" [label="http://purl.org/dc/terms/language"]
	"<http://lobid.org/zvdd/hbz/184000>" -> "Falke, Jakob" [label="http://purl.org/dc/elements/1.1/creator"]
	"<http://lobid.org/zvdd/hbz/184000>" -> "<http://digi.ub.uni-heidelberg.de/diglit/falke1873>" [label="http://lobid.org/vocab/lobid#fulltextOnline"]
	"<http://lobid.org/zvdd/hbz/183999>" -> "<http://purl.org/dc/terms/BibliographicResource>" [label="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"]
	"<http://lobid.org/zvdd/hbz/183999>" -> "<http://purl.org/vocab/frbr/core#Manifestation>" [label="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"]
	"<http://lobid.org/zvdd/hbz/183999>" -> "<http://iflastandards.info/ns/isbd/terms/mediatype/T1010>" [label="http://www.w3.org/2004/02/skos/core#Concept"]
	"<http://lobid.org/zvdd/hbz/183999>" -> "Univ.-Bibl." [label="http://iflastandards.info/ns/isbd/elements/P1017"]
	"<http://lobid.org/zvdd/hbz/183999>" -> "ger" [label="http://purl.org/dc/terms/language"]
	"<http://lobid.org/zvdd/hbz/183999>" -> "Kunst und Kunstgewerbe auf der Wiener Weltausstellung 1873" [label="http://iflastandards.info/ns/isbd/elements/P1004"]
	"<http://lobid.org/zvdd/hbz/183999>" -> "<http://digi.ub.uni-heidelberg.de/diglit/luetzow1875>" [label="http://lobid.org/vocab/lobid#fulltextOnline"]
}

For an instant visualization of the generated DOT, you can open the 'Zest Graph' view (Window -> Show View -> Other... -> Visualization -> Zest Graph). If you enable the first (leftmost) button on that view, any changes to *.dot files will be automatically picked up and visualized, i.e. upon running the *.flux file, the visualization is updated. This can be used to tweak and debug the transformation rules on small input sets.
